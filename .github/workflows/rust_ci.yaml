name: Rust-CI

on:
  push:
    branches:
      - "personal"
    paths:
      - "frontend/rust-lib/**"

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: "1.77.2"

jobs:
  test-on-ubuntu:
    runs-on: ubuntu-latest
    steps:
      # - name: Maximize build space
      #   uses: easimon/maximize-build-space@master
      #   with:
      #     root-reserve-mb: 2048
      #     swap-size-mb: 1024
      #     remove-dotnet: 'true'

      # the following step is required to avoid running out of space
      - name: Maximize build space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force

      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        id: rust_toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          profile: minimal

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "ubuntu-latest"
          cache-on-failure: "true"
          workspaces: |
            frontend/rust-lib

      - name: Checkout appflowy cloud code
        uses: actions/checkout@v4
        with:
          repository: AppFlowy-IO/AppFlowy-Cloud
          path: AppFlowy-Cloud

      - name: Prepare appflowy cloud env
        working-directory: AppFlowy-Cloud
        run: |
          # log level
          cp deploy.env .env
          sed -i 's|RUST_LOG=.*|RUST_LOG=trace|' .env
          sed -i 's|API_EXTERNAL_URL=.*|API_EXTERNAL_URL=http://localhost|' .env

      - name: Run Docker-Compose
        working-directory: AppFlowy-Cloud
        run: |
          docker pull appflowyinc/appflowy_cloud:latest
          docker compose up -d

      - name: Run rust-lib tests
        working-directory: frontend/rust-lib
        env:
          RUST_LOG: info
          RUST_BACKTRACE: 1
          af_cloud_test_base_url: http://localhost
          af_cloud_test_ws_url: ws://localhost/ws/v1
          af_cloud_test_gotrue_url: http://localhost/gotrue
        run: |
          cargo test --no-default-features --features="dart"

      - name: Show Docker Compose Logs
        if: failure()
        run: |
          docker compose logs appflowy_cloud

      - name: Clean up Docker images
        run: |
          docker image prune -af
          docker volume prune -f
